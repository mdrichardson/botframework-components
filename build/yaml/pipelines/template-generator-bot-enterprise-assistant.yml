name: $(Build.BuildId)
trigger: none  # ci trigger is set in ADO
pr: none # pr trigger is set in ADO

pool: 
  vmImage: $[ coalesce( variables['VMImage'], 'windows-2019' ) ] # or 'windows-latest' or 'vs2017-win2016'


stages:
  - stage: stage_build_node
    displayName: 'Node: Build'
    jobs:
      - job: job_build_npm
        displayName: Build Node project
        steps:
        - task: NodeTool@0
          displayName: 'Install Node 14.x'
          inputs:
            versionSpec: '14.x'

        - script: |
            yarn --immutable
          displayName: 'Install dependencies'
          workingDirectory: '$(WorkingDirectory)'

        # Install .NET Core
        #- task: UseDotNet@2
        #  displayName: 'Use .Net Core sdk 2.1.x'
        #  inputs:
        #    version: 2.1.x

        #- task: UseDotNet@2
        #  displayName: 'Use .Net Core sdk 3.1.x'
        #  inputs:
        #    version: 3.1.x

        # Run the script to see what is going on
        - script: |
            npm install yo
            npm install runtypes
            npm install xml2js
            npm install yeoman-generator
            npm install globby
            npm install normalize-path
            npm install uuid
            npm install rimraf

            yo $(Build.SourcesDirectory)\$(WorkingDirectory) $(TemplateName) --platform $scenario.Platform --integration $scenario.Integration 
          displayName: 'Build template'

        # Perhaps debugging output for the workspace?
        - script: |
            cd ..
            dir *.* /s
          displayName: 'Dir workspace'
          continueOnError: true
          condition: succeededOrFailed()

variables:
  ComponentType: generator
  DeploymentRing: preview
  # DeploymentRingOverride: # set in ADO
  # PublishPackageArtifacts: # set in ADO
  # ReleaseCandidateNumber: # set in ADO
  WorkingDirectory: generators/generator-bot-enterprise-calendar
  TemplateName: Calendar